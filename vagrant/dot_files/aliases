
alias hist='history | less'
alias refresh='. ~/.bashrc'
alias ali='vim ~/.bash_aliases'

alias ma='vim Makefile'
alias va='vim Vagrantfile'
alias re='vim README.md'
alias ba='vim ~/.bashrc'
alias steps='vim steps'
alias tree3='tree -L 3'

alias db='mysql --pager="less -niSFX" -uolass -pinsecurepassword olass'
# alias db_root=' mysql --prompt="(\u@\h) [\d]> " --pager="less -niSFX" -u root olass -h localhost'
alias db_root=' mysql --prompt="(\u@\h) [\d]> " --pager="less -niSFX" -u root olass -h localhost'

alias port_5000='sudo netstat -tulpn | grep :5000'
alias check_5000='curl -k https://localhost:5000 && echo'
alias check_app='echo "curl -sk https://loalhost" && curl -sk https://localhost/'

alias cd_app='cd /srv/apps/olass && ls -al'
alias conf_app='        sudo vim /srv/apps/olass/app/deploy/vagrant-uwsgi.ini'
alias conf_app_site='   sudo vim /etc/nginx/sites-available/vagrant-nginx'
alias check_app='       echo "curl -sk https://localhost/" && curl -sk https://localhost'

alias log_app='         vim /var/log/uwsgi/olass.log'
alias tail_app='        echo '/var/log/uwsgi/olass.log' && tail -f /var/log/uwsgi/olass.log'
alias clean_app='       echo > /var/log/uwsgi/olass.log'

log_uwsgi='vim /var/log/uwsgi.log'
tail_uwsgi='tail -f /var/log/uwsgi.log'

alias restart_supervisor='  sudo supervisorctl restart all'

alias restart_nginx='       sudo service nginx restart'
alias log_nginx='           sudo vim /var/log/nginx/error.log'
alias tail_nginx='          echo /var/log/nginx/error.log && sudo tail -f /var/log/nginx/error.log'
alias clean_nginx='         sudo echo > /var/log/nginx/error.log'
alias conf_nginx_verify='   sudo nginx -t -c /etc/nginx/nginx.conf'

alias restart_mysql='       sudo service mysql restart'

alias ssl_check='       openssl s_client -connect localhost:443  | grep subject'
alias ssl_view_cert='   openssl x509 -noout -text -n /etc/ssl/server.crt'


alias ls='ls -h --color=auto'
alias lsa='ls -al'
alias lss='ls -ltr'
alias dua='du -hcs'
alias duf="du -h --max-depth=1 ./ | sort -n -r"
alias cdd='cd ..'

alias big='du -hcs * | grep -E "M|G"'
alias big_find='find ./ -size +10000k  | xargs ls -hsS'
alias big_10='ls -hsS | head -10'
alias fin='find . -iname'

alias gst='git status'
alias glog='git log'
alias gdiff='git diff'
alias gdif='git diff --cached'
alias gb='git branch'
alias gp='git remote -v'
alias gf='git show --name-status'
alias gan='git blame'
alias grepa="nice ack-grep -i --ignore-dir=.ropeproject"


function show() {
   # credits: http://stackoverflow.com/questions/402377/using-getopts-in-bash-shell-script-to-get-long-and-short-command-line-options
   list=''
   status_only=no
   show_help=no

   set -- $(getopt fh "$@")
   while [ $# -gt 0 ]
      do
   case "$1" in
         (-f) status_only=yes;;
         (-h) show_help=yes;;
         (-c) list="$list $2"; shift;;
         (--) shift; break;;
         (-*) echo "$0: error - unrecognized option $1" 1>&2; exit 1;;
         (*)  break;;
         esac
         shift
   done

   if [[ $# -lt 1 ]] || [[ "yes" == "$show_help" ]] ; then
      echo 'Usage: '
      echo '   show [-f file status only] [-h help] commit_index'
      return
   fi

   # validate the index
   re='^[0-9]+$'
   if ! [[ "$1" =~ $re ]]; then
      echo "The commit index must be an integer " >&2
      return
   fi

   if [[ "yes" == "$status_only" ]]; then
      git log --format='%H' -"$1" | tail -1 | xargs git show --name-status
      #git log --pretty=oneline  | nl | grep " $1\t"  |  cut  -f2 | cut -d ' ' -f1 | xargs git show --name-status
   else
      git log --format='%H' -"$1" | tail -1 | xargs git show
   fi
}
